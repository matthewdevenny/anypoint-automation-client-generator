openapi: 3.0.0
info:
  title: Secret Group CRL Distributor Configs API
  description: Secret Group CRL Distributor Configs API
  version: 1.0.0

servers:
  - url: https://anypoint.mulesoft.com/secrets-manager/api/v1/
    description: Anypoint Cloudhub
  - url: https://eu1.anypoint.mulesoft.com/secrets-manager/api/v1/
    description: Anypoint Cloudhub EU
  - url: https://gov.anypoint.mulesoft.com/secrets-manager/api/v1/
    description: Anypoint Cloudhub GOV

security:
  - bearerAuth: []

paths:
  /organizations/{orgId}/environments/{envId}/secretGroups/{secretGroupId}/crlDistributorConfigs:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
      - in: path
        name: envId
        description: The environment id
        required: true
        schema:
          type: string
      - in: path
        name: secretGroupId
        description: The secret group id
        required: true
        schema:
          type: string
    get:
      operationId: GetSecretGroupCrlDistribCfgsList
      summary: Retrieves a secret-groups' collection of crl-distributor-configs.
      description: Retrieves a secret-groups' collection of crl-distributor-configs.
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '200':    # status code
          $ref: '#/components/responses/SuccessGetSecretGroupCrlDitribCfgCollection'
    post:
      operationId: PostSecretGroupCrlDistribCfgs
      summary: Create a secret-groups' crl-distributor-configs.
      description: Create a secret-groups' crl-distributor-configs.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrlDistribCfgsReqBody"
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '201':    # status code
          $ref: '#/components/responses/SuccessPostSecretGroupCrlDistribCfgs'

  /organizations/{orgId}/environments/{envId}/secretGroups/{secretGroupId}/crlDistributorConfigs/{secretId}:
    parameters:
      - in: path
        name: orgId
        description: The organization Id
        required: true
        schema:
          type: string
      - in: path
        name: envId
        description: The environment id
        required: true
        schema:
          type: string
      - in: path
        name: secretGroupId
        description: The secret group id
        required: true
        schema:
          type: string
      - in: path
        name: secretId
        description: The crl distributor configurations id
        required: true
        schema:
          type: string
    get:
      operationId: GetSecretGroupCrlDistribCfgsDetails
      summary: Retrieve crl-distributor-configs details
      description: Retrieves crl-distributor-configs details by id for a given secret group in a given organization and environment
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '200':    # status code
          $ref: '#/components/responses/SuccessGetSecretGroupCrlDitribCfgDetails'
    put:
      operationId: PutSecretGroupTlsContext
      summary: Update a given secret-group tls-context
      description: Update tls-context details for a given secret-group in a given organization and environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrlDistribCfgsReqBody"
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '200':    # status code
          $ref: '#/components/responses/SuccessPutSecretGroupCrlDitribCfg'

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      description: Bad request response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorsResponse"
    NotFoundError:
      description: resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              message:
                type: string
    SuccessGetSecretGroupCrlDitribCfgCollection:
      description: get secret-groups crl-distributor-configs collection response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CrlDistribCfgSummaryCollection"
    SuccessPostSecretGroupCrlDistribCfgs:
      description: post secret-group crl-distributor-configs response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              id:
                type: string
    SuccessGetSecretGroupCrlDitribCfgDetails:
      description: get secret-group crl-distributor-configs details response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CrlDistribCfgsDetails"
    SuccessPutSecretGroupCrlDitribCfg:
      description: put secret-group crl-distributor-configs response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string

  schemas:
    errorsResponse:
      type: object
      title: errorsResponse
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                title: type
              dataPath:
                type: string
                title: dataPath
              keyword:
                type: string
                title: keyword
              schema:
                type: string
                title: schema
              data:
                type: string
                title: data
              message:
                type: string
                title: message

    CrlDistribCfgSummaryCollection:
      type: array
      items:
        $ref: "#/components/schemas/CrlDistribCfgSummary"

    CrlDistribCfgSummary:
      type: object
      properties:
        name:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        expirationDate:
          type: string
          format: date

    CrlDistribCfgsDetails:
      type: object
      properties:
        completeCrlIssuerUrl:
          type: string
          description: URL from where complete CRL file is retrieved
        frequency:
          type: integer
          description: How frequently should the distributor site be checked for new crl files(in minutes)
        expirationDate:
          type: string
        meta:
          description: Metadata of a secret
          $ref: "#/components/schemas/Meta"
        name:
          type: string
        distributorCertificate:
          description: Refers to secret of type certificate
          $ref: "#/components/schemas/SecretPath"
        deltaCrlIssuerUrl:
          description: URL from where the changes in CRL file can be retrieved
          type: string
        caCertificate:
          description: Refers to secret of type certificate
          $ref: "#/components/schemas/SecretPath"

    CrlDistribCfgsReqBody:
      type: object
      properties:
        expirationDate:
          type: string
          description: >
            Date on which this secret should expire. If not set, by default, it will be set to one year from the date on which this secret is created/updated.
            Once the secret expires, a grant can not be requested for it.
        completeCrlIssuerUrl:
          type: string
          description: URL where complete CRL file should be retrieved
        frequency:
          type: integer
          description: How frequently should the distributor site be checked for new crl files(in minutes)
        name:
          type: string
        distributorCertificate:
          description: >
            Refers to a secret of type certificate. This certificate is used to check integrity of retrieved CRL files.
            If not defined the retrieved CRL file will be used without signature verification step being performed.
          $ref: "#/components/schemas/SecretPath"
        deltaCrlIssuerUrl:
          type: string
        caCertificate:
          description: >
            Refers to a secret of type certificate.
            Select the CA certificate associated with the retrieved CRL file.
            If selected, the retrieved CRL file may contain revoked and/or held certificates issued by this CA.
            The CA subject name is obtained as part of the CRL file that is retrieved. However, the CRL distributor that issued and signed the CRL file may not be the issuing CA.
            If this CA certificate is encountered during chain-of-trust processing then a CRL file for this CA must have been successfully retrieved, validated and still in affect (not expired) or the chain-of trust processing fails depending on how the 'Require CRL for all CAs' flag setting configured as described below.
              * If the TLS Context secret has the 'Require CRL for all CAs' flag set to false, then the CA certificate should be selected. If not selected then prior to successful retrieval and processing of the CRL file there exists a window of time when a revoked CA certificate could be considered valid in chain-of-trust processing.
              * Else if its set to true, then its not necessary to select the CA certificate.
          $ref: "#/components/schemas/SecretPath"


    Meta:
      type: object
      properties:
        id:
          type: string
        path:
          type: string

    SecretPath:
      type: object
      properties:
        path:
          type: string
          description: Relative path of the secret to be referenced.

